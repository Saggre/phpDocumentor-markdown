{% import 'include/macros.twig' as macros %}
{% block content %}
{% include 'partials/header.md.twig' with {
    title: node.name,
    subtitle: node.summary,
    description: node.description,
} only %}

* Full name: `{{ node.FullyQualifiedStructuralElementName }}`
{% if node.parent and node.parent is not empty %}* Parent trait: {{ macros.mdClassLink(node.parent, macros.mdClassPath(node), node.parent.FullyQualifiedStructuralElementName) }}
{% endif %}
{% if node.final %}* This trait is marked as **final** and can't be subclassed
{% endif %}
{% if node.deprecated %}* **Warning:** this trait is **deprecated**. This means that this class will likely be removed in a future version.
{% endif %}
{% if node.interfaces is not empty %}* This trait implements: {{ node.interfaces|join(', ')|raw }}
{% endif %}
{% set sees = node.tags.see | default([]) | filter(see => see.reference | trim) %}
{% set links = node.tags.link | default([]) | filter(link => link.link | trim) %}
{% if sees is not empty or links is not empty %}
{{ '\n' }}
**See Also:**

{% for see in sees %}
* {{ see.reference }}{% if see.description | trim %} - {{ see.description | raw }}{% endif %}{{- '\n' -}}
{% endfor %}
{% for link in links %}
* {{ link.link }}{% if link.description | trim and link.description != link.link %} - {{ link.description | raw }}{% endif %}{{- '\n' -}}
{% endfor %}
{% endif %}
{# Gitlab supports automatic table of contents generation #}
{% if md_flavour == 'gitlab' %}
{{- '\n' -}}
## Table of contents

[[_TOC_]]
{% endif %}
{% if node.properties | length > 0 %}
{{- '\n' -}}
## Properties

{% for property in node.properties %}
{% include 'property.md.twig' %}
{% endfor %}
{% endif %}
{% if node.methods | length > 0 %}
{{- '\n' -}}
## Methods

{% for method in node.methods %}
{% include 'method.md.twig' %}
{% endfor %}
{% endif %}
{% if parameter.includeFooter == 'yes' %}
{% include 'partials/footer.md.twig' %}
{% endif %}
{% endblock %}