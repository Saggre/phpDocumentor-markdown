{% import 'include/macros.twig' as macros %}
### {{ method.name }}
{% if method.summary | trim %}

{{ macros.mdEsc(method.summary) | raw }}
{% endif %}

{# Method signature #}
```php
{% if method.final %}{{ 'final' ~ ' ' }}{% endif %}{{ method.visibility ~ ' ' }}{%if method.static%}{{ 'static' ~ ' ' }}{% endif %}{{ method.name }}({% for argument in method.arguments %}
{{- argument.type }}
{{- argument.byReference ? '&' }} $
{{- argument.name }}{{ argument.default ? ' = '~argument.default }}
{%- if not loop.last %}, {% endif %}
{%- endfor %})
{{- method.response.type ? ': ' ~ method.response.type }}
```
{% if method.description | trim %}

{{ method.description | raw }}
{% endif -%}
{% if method.static or method.abstract or method.final or method.deprecated %}

{% if method.static %}* This method is **static**.{% endif -%}
{% if method.abstract %}* This method is **abstract**.{% endif -%}
{% if method.final %}* This method is **final**.{% endif -%}
{% if method.deprecated %}* **Warning:** this method is **deprecated**. This means that this method will likely be removed in a future version.{% endif -%}
{% endif -%}
{%- if method.arguments is not empty %}

**Parameters:**

{% set parameters = [] %}
{% for argument in method.arguments %}
{% set parameters = parameters | merge([
    {
        name: '`$' ~ argument.name ~ '`',
        type: argument.type ? '**' ~ argument.type ~ '**' : '',
        description: argument.description | nl2br | replace({"\n": "", "\r": "", "\t": ""}) | raw
    }
]) %}
{% endfor -%}
{{ macros.mdTable(parameters, [
    { label: 'Parameter', key: 'name' },
    { label: 'Type', key: 'type' },
    { label: 'Description', key: 'description' },
]) }}
{%- endif -%}
{% if method.response.description and method.response.description is not empty %}

**Return Value:**

{{ method.response.description | raw }}
{% endif %}
{% if method.tags.throws | length > 0 or method.tags.throw | length > 0 %}

**Throws:**

{% for exception in method.tags.throws %}
{% if exception.description | trim %}
{{ exception.description | raw }}
{% endif %}
- {{ macros.mdClassLink(exception.type | raw, macros.mdClassPath(node), exception.type | shortFQSEN ) }}
{% endfor %}
{% endif -%}
{% set sees = method.tags.see | default([]) | filter(see => see.reference | trim) %}
{% set links = method.tags.link | default([]) | filter(link => link.link | trim) %}
{% if sees is not empty or links is not empty %}

**See Also:**

{%- for see in sees -%}
* {{ see.reference }}{% if see.description %} - {{ see.description | raw }}{% endif %}{{- '\n' -}}
{%- endfor -%}
{%- for link in links -%}
* {{ link.link }}{% if link.description and link.description != link.link %} - {{ link.description | raw }}{% endif %}{{- '\n' -}}
{%- endfor -%}
{%- endif %}

***
